<div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedProduct(args, Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    Add to Favorite <input type="checkbox" @onchange="FavoriteUpdated"/><br /><br />
    Name - @Product.Name<br />
    Show Properties :
    <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <div class="border m-1 p-1">
                <p>@prodProp.Key : @prodProp.Value</p>
            </div>
        }
    }
    <br />
    <_EditDeleteButton IsActive="@Product.IsActive">
    </_EditDeleteButton>
</div>


@code {
    [Parameter]
    public Demo_Product Product { get; set; }


    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange{ get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }
}
